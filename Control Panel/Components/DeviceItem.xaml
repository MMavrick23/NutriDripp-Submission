<UserControl x:Class="NutriDripp_CP.Components.DeviceItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NutriDripp_CP.Components"
             mc:Ignorable="d" d:DesignWidth="720">

    <UserControl.Style>
        <Style TargetType="UserControl">
            <Style.Triggers>
                <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>

    <UserControl.ContextMenu>
        <ContextMenu>
            <ContextMenu.Style>
                <Style TargetType="ContextMenu">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ContextMenu}">
                                <Border CornerRadius="7" Background="{DynamicResource Secondary}" BorderBrush="{DynamicResource Primary}" BorderThickness="1">
                                    <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ContextMenu.Style>

            <ContextMenu.Resources>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="Cursor" Value="Hand"/>

                    <Setter Property="Foreground" Value="{DynamicResource OnSecondary}"/>

                    <Setter Property="FontFamily" Value="Arial-Rounded"/>
                    <Setter Property="FontSize" Value="16"/>
                </Style>

                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{DynamicResource OnSecondary}"/>

                    <Setter Property="FontFamily" Value="{StaticResource FontAwesome_Solid}"/>
                    <Setter Property="FontSize" Value="16"/>
                </Style>
            </ContextMenu.Resources>

            <MenuItem Header="_Reset" Click="RestartBtn_Click">
                <MenuItem.Icon>
                    <TextBlock Text="&#xf021;"/>
                </MenuItem.Icon>
            </MenuItem>

            <Separator Background="{DynamicResource OnSecondary}" Opacity="0.35"/>

            <MenuItem Header="_Initialize" Click="InitializeBtn_Click">
                <MenuItem.Icon>
                    <TextBlock Text="&#xf135;"/>
                </MenuItem.Icon>

                <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="Visibility" Value="Collapsed"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="1">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            
            <MenuItem Header="_Initialize (Skip Checks)" Click="InitializeNoCheckBtn_Click">
                <MenuItem.Icon>
                    <TextBlock Text="&#xf135;"/>
                </MenuItem.Icon>

                <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="Visibility" Value="Collapsed"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="1">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
        </ContextMenu>
    </UserControl.ContextMenu>
    
    <Grid Margin="10, 5">
        <Border x:Name="BOM" CornerRadius="10" Background="{DynamicResource Secondary}"/>
        <Border              CornerRadius="10" Background="{DynamicResource Secondary}">
            <Border.OpacityMask>
                <VisualBrush Visual="{Binding ElementName=BOM}"/>
            </Border.OpacityMask>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Background="{DynamicResource Theme}">
                    <Viewbox>
                        <Viewbox.LayoutTransform>
                            <RotateTransform Angle="90"/>
                        </Viewbox.LayoutTransform>

                        <TextBlock FontFamily="Arial-Rounded" Foreground="{DynamicResource OnTheme}" Text="{Binding Type}"/>
                    </Viewbox>
                </Border>

                <Grid Grid.Column="1" Margin="15">
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="FontFamily" Value="Arial-Rounded"/>
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="Foreground" Value="{DynamicResource OnSecondary}"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </Grid.Resources>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left">
                    <Run Text="{Binding Name}" FontSize="21" FontWeight="Bold" Foreground="{DynamicResource Theme}"/>
                    <Run Text="{Binding Version}"/>
                    <Run Text="{Binding Build, StringFormat={}• B{0}}"/>
                    </TextBlock>

                    <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Text="{Binding Serial, StringFormat={}Serial: {0}}" Opacity="0.75"/>

                    <TextBlock Grid.Row="0" Grid.Column="1" FontSize="21" FontWeight="Bold">
                <Run FontFamily="{StaticResource FontAwesome_Solid}">
                    <Run.Style>
                        <Style TargetType="Run">
                            <Setter Property="Text" Value="&#xf071;"/>
                            <Setter Property="Foreground" Value="{DynamicResource Error}"/>
                            
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Errors.Count}" Value="0">
                                    <Setter Property="Text" Value="&#xf058;"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Theme}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Run.Style>
                </Run>
                
                <Run>
                    <Run.Style>
                        <Style TargetType="Run">
                            <Setter Property="Text" Value="Needs Attention"/>
                            <Setter Property="Foreground" Value="{DynamicResource Error}"/>
                            
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Errors.Count}" Value="0">
                                    <Setter Property="Text" Value="All Good"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Theme}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Run.Style>
                </Run>
                    </TextBlock>

                    <TextBlock Grid.Row="1" Grid.Column="1" Opacity="0.75">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Text" Value="{Binding Errors.Count, StringFormat={}({0}) Pending issues.}"/>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Errors.Count}" Value="0">
                                        <Setter Property="Text" Value="No detected errors."/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" FontSize="21" FontWeight="Bold">
                <Run FontFamily="{StaticResource FontAwesome_Solid}">
                    <Run.Style>
                        <Style TargetType="Run">
                            <Setter Property="Text" Value="&#xf071;"/>
                            <Setter Property="Foreground" Value="{DynamicResource Error}"/>
                            
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="-3">
                                    <Setter Property="Text" Value="&#xf071;"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Error}"/>
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding Status}" Value="-2">
                                    <Setter Property="Text" Value="&#xf071;"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Error}"/>
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding Status}" Value="-1">
                                    <Setter Property="Text" Value="&#xf06a;"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Warning}"/>
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding Status}" Value="1">
                                    <Setter Property="Text" Value="&#xf06a;"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Theme}"/>
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding Status}" Value="2">
                                    <Setter Property="Text" Value="&#xf058;"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Theme}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Run.Style>
                </Run>
                
                <Run>
                    <Run.Style>
                        <Style TargetType="Run">
                            <Setter Property="Text" Value="Failed To Boot"/>
                            <Setter Property="Foreground" Value="{DynamicResource Error}"/>
                            
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="-3">
                                    <Setter Property="Text" Value="Disconnected"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Error}"/>
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding Status}" Value="-2">
                                    <Setter Property="Text" Value="Halted By Error"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Error}"/>
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding Status}" Value="-1">
                                    <Setter Property="Text" Value="Busy/Not Ready"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Warning}"/>
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding Status}" Value="1">
                                    <Setter Property="Text" Value="Initialize Pending"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Theme}"/>
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding Status}" Value="2">
                                    <Setter Property="Text" Value="Ready To Operate"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Theme}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Run.Style>
                </Run>
                    </TextBlock>

                    <TextBlock Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" Opacity="0.75">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Text" Value="Stuck at boot for errors."/>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="-3">
                                        <Setter Property="Text" Value="No heartbeat received."/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Status}" Value="-2">
                                        <Setter Property="Text" Value="High severity error occured."/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Status}" Value="-1">
                                        <Setter Property="Text" Value="Handling a critical process."/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Status}" Value="1">
                                        <Setter Property="Text" Value="Booted &amp; ready to initialize."/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Status}" Value="2">
                                        <Setter Property="Text" Value="Initialized &amp; connected."/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</UserControl>
